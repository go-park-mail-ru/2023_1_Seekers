// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: mail.proto

package mail_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID uint64 `protobuf:"varint,1,opt,name=uID,proto3" json:"uID,omitempty"`
}

func (x *UID) Reset() {
	*x = UID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UID) ProtoMessage() {}

func (x *UID) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UID.ProtoReflect.Descriptor instead.
func (*UID) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{0}
}

func (x *UID) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

type UserFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID        uint64 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	FolderSlug string `protobuf:"bytes,2,opt,name=FolderSlug,proto3" json:"FolderSlug,omitempty"`
}

func (x *UserFolder) Reset() {
	*x = UserFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFolder) ProtoMessage() {}

func (x *UserFolder) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFolder.ProtoReflect.Descriptor instead.
func (*UserFolder) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{1}
}

func (x *UserFolder) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *UserFolder) GetFolderSlug() string {
	if x != nil {
		return x.FolderSlug
	}
	return ""
}

type UIDMessageID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID       uint64 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	MessageID uint64 `protobuf:"varint,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
}

func (x *UIDMessageID) Reset() {
	*x = UIDMessageID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIDMessageID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIDMessageID) ProtoMessage() {}

func (x *UIDMessageID) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIDMessageID.ProtoReflect.Descriptor instead.
func (*UIDMessageID) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{2}
}

func (x *UIDMessageID) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *UIDMessageID) GetMessageID() uint64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

type UIDMessageIDFolderSlug struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID        uint64 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	MessageID  uint64 `protobuf:"varint,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	FolderSlug string `protobuf:"bytes,3,opt,name=FolderSlug,proto3" json:"FolderSlug,omitempty"`
}

func (x *UIDMessageIDFolderSlug) Reset() {
	*x = UIDMessageIDFolderSlug{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIDMessageIDFolderSlug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIDMessageIDFolderSlug) ProtoMessage() {}

func (x *UIDMessageIDFolderSlug) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIDMessageIDFolderSlug.ProtoReflect.Descriptor instead.
func (*UIDMessageIDFolderSlug) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{3}
}

func (x *UIDMessageIDFolderSlug) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *UIDMessageIDFolderSlug) GetMessageID() uint64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *UIDMessageIDFolderSlug) GetFolderSlug() string {
	if x != nil {
		return x.FolderSlug
	}
	return ""
}

type Recipients struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipients []string `protobuf:"bytes,1,rep,name=Recipients,proto3" json:"Recipients,omitempty"`
}

func (x *Recipients) Reset() {
	*x = Recipients{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipients) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipients) ProtoMessage() {}

func (x *Recipients) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipients.ProtoReflect.Descriptor instead.
func (*Recipients) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{4}
}

func (x *Recipients) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	FileData string `protobuf:"bytes,2,opt,name=FileData,proto3" json:"FileData,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{5}
}

func (x *Attachment) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Attachment) GetFileData() string {
	if x != nil {
		return x.FileData
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUser         string        `protobuf:"bytes,1,opt,name=FromUser,proto3" json:"FromUser,omitempty"`
	Recipients       []string      `protobuf:"bytes,2,rep,name=Recipients,proto3" json:"Recipients,omitempty"`
	Title            string        `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Text             string        `protobuf:"bytes,4,opt,name=Text,proto3" json:"Text,omitempty"`
	ReplyToMessageID *UID          `protobuf:"bytes,5,opt,name=ReplyToMessageID,proto3" json:"ReplyToMessageID,omitempty"`
	Attachments      []*Attachment `protobuf:"bytes,6,rep,name=Attachments,proto3" json:"Attachments,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{6}
}

func (x *Message) GetFromUser() string {
	if x != nil {
		return x.FromUser
	}
	return ""
}

func (x *Message) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *Message) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Message) GetReplyToMessageID() *UID {
	if x != nil {
		return x.ReplyToMessageID
	}
	return nil
}

func (x *Message) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type SendMessageParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *SendMessageParams) Reset() {
	*x = SendMessageParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageParams) ProtoMessage() {}

func (x *SendMessageParams) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageParams.ProtoReflect.Descriptor instead.
func (*SendMessageParams) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{7}
}

func (x *SendMessageParams) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type FailedEmailsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient     string   `protobuf:"bytes,1,opt,name=Recipient,proto3" json:"Recipient,omitempty"`
	InvalidEmails []string `protobuf:"bytes,2,rep,name=InvalidEmails,proto3" json:"InvalidEmails,omitempty"`
}

func (x *FailedEmailsParams) Reset() {
	*x = FailedEmailsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FailedEmailsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailedEmailsParams) ProtoMessage() {}

func (x *FailedEmailsParams) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailedEmailsParams.ProtoReflect.Descriptor instead.
func (*FailedEmailsParams) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{8}
}

func (x *FailedEmailsParams) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *FailedEmailsParams) GetInvalidEmails() []string {
	if x != nil {
		return x.InvalidEmails
	}
	return nil
}

type RecipientEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientEmail string `protobuf:"bytes,1,opt,name=RecipientEmail,proto3" json:"RecipientEmail,omitempty"`
}

func (x *RecipientEmail) Reset() {
	*x = RecipientEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipientEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipientEmail) ProtoMessage() {}

func (x *RecipientEmail) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipientEmail.ProtoReflect.Descriptor instead.
func (*RecipientEmail) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{9}
}

func (x *RecipientEmail) GetRecipientEmail() string {
	if x != nil {
		return x.RecipientEmail
	}
	return ""
}

type Folder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolderID       uint64 `protobuf:"varint,1,opt,name=FolderID,proto3" json:"FolderID,omitempty"`
	UserID         uint64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	LocalName      string `protobuf:"bytes,3,opt,name=LocalName,proto3" json:"LocalName,omitempty"`
	Name           string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	MessagesUnseen int64  `protobuf:"varint,5,opt,name=MessagesUnseen,proto3" json:"MessagesUnseen,omitempty"`
	MessagesCount  int64  `protobuf:"varint,6,opt,name=MessagesCount,proto3" json:"MessagesCount,omitempty"`
}

func (x *Folder) Reset() {
	*x = Folder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Folder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Folder) ProtoMessage() {}

func (x *Folder) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Folder.ProtoReflect.Descriptor instead.
func (*Folder) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{10}
}

func (x *Folder) GetFolderID() uint64 {
	if x != nil {
		return x.FolderID
	}
	return 0
}

func (x *Folder) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Folder) GetLocalName() string {
	if x != nil {
		return x.LocalName
	}
	return ""
}

func (x *Folder) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Folder) GetMessagesUnseen() int64 {
	if x != nil {
		return x.MessagesUnseen
	}
	return 0
}

func (x *Folder) GetMessagesCount() int64 {
	if x != nil {
		return x.MessagesCount
	}
	return 0
}

type FoldersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Folders []*Folder `protobuf:"bytes,1,rep,name=Folders,proto3" json:"Folders,omitempty"`
}

func (x *FoldersResponse) Reset() {
	*x = FoldersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersResponse) ProtoMessage() {}

func (x *FoldersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersResponse.ProtoReflect.Descriptor instead.
func (*FoldersResponse) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{11}
}

func (x *FoldersResponse) GetFolders() []*Folder {
	if x != nil {
		return x.Folders
	}
	return nil
}

type FormFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *FormFolder) Reset() {
	*x = FormFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormFolder) ProtoMessage() {}

func (x *FormFolder) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormFolder.ProtoReflect.Descriptor instead.
func (*FormFolder) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{12}
}

func (x *FormFolder) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateFolderParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID        uint64      `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	FormFolder *FormFolder `protobuf:"bytes,2,opt,name=FormFolder,proto3" json:"FormFolder,omitempty"`
}

func (x *CreateFolderParams) Reset() {
	*x = CreateFolderParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFolderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderParams) ProtoMessage() {}

func (x *CreateFolderParams) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderParams.ProtoReflect.Descriptor instead.
func (*CreateFolderParams) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{13}
}

func (x *CreateFolderParams) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *CreateFolderParams) GetFormFolder() *FormFolder {
	if x != nil {
		return x.FormFolder
	}
	return nil
}

type DeleteFolderParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID        uint64 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	FolderSlug string `protobuf:"bytes,2,opt,name=FolderSlug,proto3" json:"FolderSlug,omitempty"`
}

func (x *DeleteFolderParams) Reset() {
	*x = DeleteFolderParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFolderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFolderParams) ProtoMessage() {}

func (x *DeleteFolderParams) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFolderParams.ProtoReflect.Descriptor instead.
func (*DeleteFolderParams) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteFolderParams) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *DeleteFolderParams) GetFolderSlug() string {
	if x != nil {
		return x.FolderSlug
	}
	return ""
}

type EditFolderParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID        uint64      `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	FolderSlug string      `protobuf:"bytes,2,opt,name=FolderSlug,proto3" json:"FolderSlug,omitempty"`
	FormFolder *FormFolder `protobuf:"bytes,3,opt,name=FormFolder,proto3" json:"FormFolder,omitempty"`
}

func (x *EditFolderParams) Reset() {
	*x = EditFolderParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditFolderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditFolderParams) ProtoMessage() {}

func (x *EditFolderParams) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditFolderParams.ProtoReflect.Descriptor instead.
func (*EditFolderParams) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{15}
}

func (x *EditFolderParams) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *EditFolderParams) GetFolderSlug() string {
	if x != nil {
		return x.FolderSlug
	}
	return ""
}

func (x *EditFolderParams) GetFormFolder() *FormFolder {
	if x != nil {
		return x.FormFolder
	}
	return nil
}

type SaveDraftParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID     uint64   `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	Message *Message `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *SaveDraftParams) Reset() {
	*x = SaveDraftParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveDraftParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDraftParams) ProtoMessage() {}

func (x *SaveDraftParams) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDraftParams.ProtoReflect.Descriptor instead.
func (*SaveDraftParams) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{16}
}

func (x *SaveDraftParams) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *SaveDraftParams) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type MoveToFolderParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID            uint64 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	MessageID      uint64 `protobuf:"varint,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	FromFolderSlug string `protobuf:"bytes,3,opt,name=FromFolderSlug,proto3" json:"FromFolderSlug,omitempty"`
	ToFolderSlug   string `protobuf:"bytes,4,opt,name=ToFolderSlug,proto3" json:"ToFolderSlug,omitempty"`
}

func (x *MoveToFolderParams) Reset() {
	*x = MoveToFolderParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveToFolderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveToFolderParams) ProtoMessage() {}

func (x *MoveToFolderParams) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveToFolderParams.ProtoReflect.Descriptor instead.
func (*MoveToFolderParams) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{17}
}

func (x *MoveToFolderParams) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *MoveToFolderParams) GetMessageID() uint64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *MoveToFolderParams) GetFromFolderSlug() string {
	if x != nil {
		return x.FromFolderSlug
	}
	return ""
}

func (x *MoveToFolderParams) GetToFolderSlug() string {
	if x != nil {
		return x.ToFolderSlug
	}
	return ""
}

type EditDraftParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID       uint64   `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	MessageID uint64   `protobuf:"varint,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Message   *Message `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *EditDraftParams) Reset() {
	*x = EditDraftParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditDraftParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditDraftParams) ProtoMessage() {}

func (x *EditDraftParams) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditDraftParams.ProtoReflect.Descriptor instead.
func (*EditDraftParams) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{18}
}

func (x *EditDraftParams) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *EditDraftParams) GetMessageID() uint64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *EditDraftParams) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=LastName,proto3" json:"LastName,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{19}
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type SearchRecipientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsersInfo []*UserInfo `protobuf:"bytes,1,rep,name=UsersInfo,proto3" json:"UsersInfo,omitempty"`
}

func (x *SearchRecipientsResponse) Reset() {
	*x = SearchRecipientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRecipientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRecipientsResponse) ProtoMessage() {}

func (x *SearchRecipientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRecipientsResponse.ProtoReflect.Descriptor instead.
func (*SearchRecipientsResponse) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{20}
}

func (x *SearchRecipientsResponse) GetUsersInfo() []*UserInfo {
	if x != nil {
		return x.UsersInfo
	}
	return nil
}

type AttachmentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttachID uint64 `protobuf:"varint,1,opt,name=AttachID,proto3" json:"AttachID,omitempty"`
	FileName string `protobuf:"bytes,2,opt,name=FileName,proto3" json:"FileName,omitempty"`
	FileData []byte `protobuf:"bytes,3,opt,name=FileData,proto3" json:"FileData,omitempty"`
	S3FName  string `protobuf:"bytes,4,opt,name=S3FName,proto3" json:"S3FName,omitempty"`
	Type     string `protobuf:"bytes,5,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *AttachmentInfo) Reset() {
	*x = AttachmentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentInfo) ProtoMessage() {}

func (x *AttachmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentInfo.ProtoReflect.Descriptor instead.
func (*AttachmentInfo) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{21}
}

func (x *AttachmentInfo) GetAttachID() uint64 {
	if x != nil {
		return x.AttachID
	}
	return 0
}

func (x *AttachmentInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *AttachmentInfo) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

func (x *AttachmentInfo) GetS3FName() string {
	if x != nil {
		return x.S3FName
	}
	return ""
}

func (x *AttachmentInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type MessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID        uint64            `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	FromUser         *UserInfo         `protobuf:"bytes,2,opt,name=FromUser,proto3" json:"FromUser,omitempty"`
	Recipients       []*UserInfo       `protobuf:"bytes,3,rep,name=Recipients,proto3" json:"Recipients,omitempty"`
	Title            string            `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	CreatedAt        string            `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	Text             string            `protobuf:"bytes,6,opt,name=Text,proto3" json:"Text,omitempty"`
	ReplyToMessageID *UID              `protobuf:"bytes,7,opt,name=ReplyToMessageID,proto3" json:"ReplyToMessageID,omitempty"`
	ReplyTo          *MessageInfo      `protobuf:"bytes,8,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
	Seen             bool              `protobuf:"varint,9,opt,name=Seen,proto3" json:"Seen,omitempty"`
	Favorite         bool              `protobuf:"varint,10,opt,name=Favorite,proto3" json:"Favorite,omitempty"`
	Deleted          bool              `protobuf:"varint,11,opt,name=Deleted,proto3" json:"Deleted,omitempty"`
	Attachments      []*AttachmentInfo `protobuf:"bytes,12,rep,name=Attachments,proto3" json:"Attachments,omitempty"`
}

func (x *MessageInfo) Reset() {
	*x = MessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInfo) ProtoMessage() {}

func (x *MessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInfo.ProtoReflect.Descriptor instead.
func (*MessageInfo) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{22}
}

func (x *MessageInfo) GetMessageID() uint64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *MessageInfo) GetFromUser() *UserInfo {
	if x != nil {
		return x.FromUser
	}
	return nil
}

func (x *MessageInfo) GetRecipients() []*UserInfo {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *MessageInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MessageInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MessageInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MessageInfo) GetReplyToMessageID() *UID {
	if x != nil {
		return x.ReplyToMessageID
	}
	return nil
}

func (x *MessageInfo) GetReplyTo() *MessageInfo {
	if x != nil {
		return x.ReplyTo
	}
	return nil
}

func (x *MessageInfo) GetSeen() bool {
	if x != nil {
		return x.Seen
	}
	return false
}

func (x *MessageInfo) GetFavorite() bool {
	if x != nil {
		return x.Favorite
	}
	return false
}

func (x *MessageInfo) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *MessageInfo) GetAttachments() []*AttachmentInfo {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type ValidateRecipientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidEmails   []string `protobuf:"bytes,1,rep,name=ValidEmails,proto3" json:"ValidEmails,omitempty"`
	InvalidEmails []string `protobuf:"bytes,2,rep,name=InvalidEmails,proto3" json:"InvalidEmails,omitempty"`
}

func (x *ValidateRecipientsResponse) Reset() {
	*x = ValidateRecipientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateRecipientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRecipientsResponse) ProtoMessage() {}

func (x *ValidateRecipientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRecipientsResponse.ProtoReflect.Descriptor instead.
func (*ValidateRecipientsResponse) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{23}
}

func (x *ValidateRecipientsResponse) GetValidEmails() []string {
	if x != nil {
		return x.ValidEmails
	}
	return nil
}

func (x *ValidateRecipientsResponse) GetInvalidEmails() []string {
	if x != nil {
		return x.InvalidEmails
	}
	return nil
}

type MessagesInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessagesInfo []*MessageInfo `protobuf:"bytes,1,rep,name=MessagesInfo,proto3" json:"MessagesInfo,omitempty"`
}

func (x *MessagesInfoResponse) Reset() {
	*x = MessagesInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesInfoResponse) ProtoMessage() {}

func (x *MessagesInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesInfoResponse.ProtoReflect.Descriptor instead.
func (*MessagesInfoResponse) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{24}
}

func (x *MessagesInfoResponse) GetMessagesInfo() []*MessageInfo {
	if x != nil {
		return x.MessagesInfo
	}
	return nil
}

type SearchMailParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID      uint64 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	FromUser string `protobuf:"bytes,2,opt,name=FromUser,proto3" json:"FromUser,omitempty"`
	ToUser   string `protobuf:"bytes,3,opt,name=ToUser,proto3" json:"ToUser,omitempty"`
	Folder   string `protobuf:"bytes,4,opt,name=Folder,proto3" json:"Folder,omitempty"`
	Filter   string `protobuf:"bytes,5,opt,name=Filter,proto3" json:"Filter,omitempty"`
}

func (x *SearchMailParams) Reset() {
	*x = SearchMailParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMailParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMailParams) ProtoMessage() {}

func (x *SearchMailParams) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMailParams.ProtoReflect.Descriptor instead.
func (*SearchMailParams) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{25}
}

func (x *SearchMailParams) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *SearchMailParams) GetFromUser() string {
	if x != nil {
		return x.FromUser
	}
	return ""
}

func (x *SearchMailParams) GetToUser() string {
	if x != nil {
		return x.ToUser
	}
	return ""
}

func (x *SearchMailParams) GetFolder() string {
	if x != nil {
		return x.Folder
	}
	return ""
}

func (x *SearchMailParams) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type AttNUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttachID uint64 `protobuf:"varint,1,opt,name=AttachID,proto3" json:"AttachID,omitempty"`
	UserID   uint64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *AttNUser) Reset() {
	*x = AttNUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttNUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttNUser) ProtoMessage() {}

func (x *AttNUser) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttNUser.ProtoReflect.Descriptor instead.
func (*AttNUser) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{26}
}

func (x *AttNUser) GetAttachID() uint64 {
	if x != nil {
		return x.AttachID
	}
	return 0
}

func (x *AttNUser) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type Nothing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dummy bool `protobuf:"varint,1,opt,name=dummy,proto3" json:"dummy,omitempty"`
}

func (x *Nothing) Reset() {
	*x = Nothing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nothing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nothing) ProtoMessage() {}

func (x *Nothing) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nothing.ProtoReflect.Descriptor instead.
func (*Nothing) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{27}
}

func (x *Nothing) GetDummy() bool {
	if x != nil {
		return x.Dummy
	}
	return false
}

var File_mail_proto protoreflect.FileDescriptor

var file_mail_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x17, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x49,
	0x44, 0x22, 0x3e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75,
	0x67, 0x22, 0x3e, 0x0a, 0x0c, 0x55, 0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x55, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x22, 0x68, 0x0a, 0x16, 0x55, 0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75, 0x67, 0x22, 0x2c, 0x0a, 0x0a, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x44, 0x0a, 0x0a, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xe6, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46,
	0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x3b, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x49, 0x44, 0x52, 0x10, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x38,
	0x0a, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2d, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x58, 0x0a, 0x12,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x38, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0xbc, 0x01, 0x0a, 0x06, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x55, 0x6e, 0x73,
	0x65, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x55, 0x6e, 0x73, 0x65, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x3f, 0x0a, 0x0f, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x07, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x22, 0x20, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x0a, 0x46, 0x6f,
	0x72, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x6d,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x22, 0x46, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75, 0x67, 0x22, 0x7c, 0x0a, 0x10, 0x45, 0x64,
	0x69, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75, 0x67,
	0x12, 0x36, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x46, 0x6f,
	0x72, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0x52, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x2d, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x90, 0x01, 0x0a,
	0x12, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x53, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x46, 0x72, 0x6f,
	0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x54,
	0x6f, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x54, 0x6f, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75, 0x67, 0x22,
	0x70, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x55, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x12, 0x2d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x5a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a,
	0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x92, 0x01,
	0x0a, 0x0e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x33, 0x46, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x33, 0x46, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xd3, 0x03, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x12, 0x30, 0x0a, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x3b, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x49, 0x44, 0x52, 0x10, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x31, 0x0a,
	0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x53, 0x65, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x64, 0x0a, 0x1a, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x53,
	0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x61,
	0x69, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72,
	0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72,
	0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x3e,
	0x0a, 0x08, 0x41, 0x74, 0x74, 0x4e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x1f,
	0x0a, 0x07, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x75, 0x6d,
	0x6d, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x32,
	0xe6, 0x0c, 0x0a, 0x0b, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x0f, 0x2e,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x49, 0x44, 0x1a, 0x1b,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x1a, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x1c, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4d, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x20, 0x2e,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x49, 0x44, 0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x49, 0x44, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x1a, 0x17,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x12, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x18, 0x53, 0x65,
	0x6e, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x12, 0x53, 0x65, 0x6e, 0x64, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x1a,
	0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x4d, 0x61, 0x72, 0x6b, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x73, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x22, 0x2e, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x49, 0x44, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x75, 0x67, 0x1a,
	0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x13, 0x4d, 0x61,
	0x72, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x73, 0x55, 0x6e, 0x73, 0x65, 0x65,
	0x6e, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x53, 0x6c, 0x75, 0x67, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0a, 0x45, 0x64, 0x69, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x22, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x49,
	0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x53, 0x6c, 0x75, 0x67, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x09, 0x53,
	0x61, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x09, 0x45, 0x64, 0x69, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1b, 0x2e,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x13, 0x4d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x6f,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x13, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e,
	0x67, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x49, 0x44, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x74, 0x74, 0x4e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mail_proto_rawDescOnce sync.Once
	file_mail_proto_rawDescData = file_mail_proto_rawDesc
)

func file_mail_proto_rawDescGZIP() []byte {
	file_mail_proto_rawDescOnce.Do(func() {
		file_mail_proto_rawDescData = protoimpl.X.CompressGZIP(file_mail_proto_rawDescData)
	})
	return file_mail_proto_rawDescData
}

var file_mail_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_mail_proto_goTypes = []interface{}{
	(*UID)(nil),                        // 0: mail_proto.UID
	(*UserFolder)(nil),                 // 1: mail_proto.UserFolder
	(*UIDMessageID)(nil),               // 2: mail_proto.UIDMessageID
	(*UIDMessageIDFolderSlug)(nil),     // 3: mail_proto.UIDMessageIDFolderSlug
	(*Recipients)(nil),                 // 4: mail_proto.Recipients
	(*Attachment)(nil),                 // 5: mail_proto.Attachment
	(*Message)(nil),                    // 6: mail_proto.Message
	(*SendMessageParams)(nil),          // 7: mail_proto.SendMessageParams
	(*FailedEmailsParams)(nil),         // 8: mail_proto.FailedEmailsParams
	(*RecipientEmail)(nil),             // 9: mail_proto.RecipientEmail
	(*Folder)(nil),                     // 10: mail_proto.Folder
	(*FoldersResponse)(nil),            // 11: mail_proto.FoldersResponse
	(*FormFolder)(nil),                 // 12: mail_proto.FormFolder
	(*CreateFolderParams)(nil),         // 13: mail_proto.CreateFolderParams
	(*DeleteFolderParams)(nil),         // 14: mail_proto.DeleteFolderParams
	(*EditFolderParams)(nil),           // 15: mail_proto.EditFolderParams
	(*SaveDraftParams)(nil),            // 16: mail_proto.SaveDraftParams
	(*MoveToFolderParams)(nil),         // 17: mail_proto.MoveToFolderParams
	(*EditDraftParams)(nil),            // 18: mail_proto.EditDraftParams
	(*UserInfo)(nil),                   // 19: mail_proto.UserInfo
	(*SearchRecipientsResponse)(nil),   // 20: mail_proto.SearchRecipientsResponse
	(*AttachmentInfo)(nil),             // 21: mail_proto.AttachmentInfo
	(*MessageInfo)(nil),                // 22: mail_proto.MessageInfo
	(*ValidateRecipientsResponse)(nil), // 23: mail_proto.ValidateRecipientsResponse
	(*MessagesInfoResponse)(nil),       // 24: mail_proto.MessagesInfoResponse
	(*SearchMailParams)(nil),           // 25: mail_proto.SearchMailParams
	(*AttNUser)(nil),                   // 26: mail_proto.AttNUser
	(*Nothing)(nil),                    // 27: mail_proto.Nothing
}
var file_mail_proto_depIdxs = []int32{
	0,  // 0: mail_proto.Message.ReplyToMessageID:type_name -> mail_proto.UID
	5,  // 1: mail_proto.Message.Attachments:type_name -> mail_proto.Attachment
	6,  // 2: mail_proto.SendMessageParams.Message:type_name -> mail_proto.Message
	10, // 3: mail_proto.FoldersResponse.Folders:type_name -> mail_proto.Folder
	12, // 4: mail_proto.CreateFolderParams.FormFolder:type_name -> mail_proto.FormFolder
	12, // 5: mail_proto.EditFolderParams.FormFolder:type_name -> mail_proto.FormFolder
	6,  // 6: mail_proto.SaveDraftParams.Message:type_name -> mail_proto.Message
	6,  // 7: mail_proto.EditDraftParams.Message:type_name -> mail_proto.Message
	19, // 8: mail_proto.SearchRecipientsResponse.UsersInfo:type_name -> mail_proto.UserInfo
	19, // 9: mail_proto.MessageInfo.FromUser:type_name -> mail_proto.UserInfo
	19, // 10: mail_proto.MessageInfo.Recipients:type_name -> mail_proto.UserInfo
	0,  // 11: mail_proto.MessageInfo.ReplyToMessageID:type_name -> mail_proto.UID
	22, // 12: mail_proto.MessageInfo.ReplyTo:type_name -> mail_proto.MessageInfo
	21, // 13: mail_proto.MessageInfo.Attachments:type_name -> mail_proto.AttachmentInfo
	22, // 14: mail_proto.MessagesInfoResponse.MessagesInfo:type_name -> mail_proto.MessageInfo
	0,  // 15: mail_proto.MailService.GetFolders:input_type -> mail_proto.UID
	1,  // 16: mail_proto.MailService.GetFolderInfo:input_type -> mail_proto.UserFolder
	1,  // 17: mail_proto.MailService.GetFolderMessages:input_type -> mail_proto.UserFolder
	25, // 18: mail_proto.MailService.SearchMessages:input_type -> mail_proto.SearchMailParams
	0,  // 19: mail_proto.MailService.SearchRecipients:input_type -> mail_proto.UID
	0,  // 20: mail_proto.MailService.CreateDefaultFolders:input_type -> mail_proto.UID
	2,  // 21: mail_proto.MailService.GetMessage:input_type -> mail_proto.UIDMessageID
	4,  // 22: mail_proto.MailService.ValidateRecipients:input_type -> mail_proto.Recipients
	7,  // 23: mail_proto.MailService.SendMessage:input_type -> mail_proto.SendMessageParams
	8,  // 24: mail_proto.MailService.SendFailedSendingMessage:input_type -> mail_proto.FailedEmailsParams
	9,  // 25: mail_proto.MailService.SendWelcomeMessage:input_type -> mail_proto.RecipientEmail
	3,  // 26: mail_proto.MailService.MarkMessageAsSeen:input_type -> mail_proto.UIDMessageIDFolderSlug
	3,  // 27: mail_proto.MailService.MarkMessageAsUnseen:input_type -> mail_proto.UIDMessageIDFolderSlug
	13, // 28: mail_proto.MailService.CreateFolder:input_type -> mail_proto.CreateFolderParams
	14, // 29: mail_proto.MailService.DeleteFolder:input_type -> mail_proto.DeleteFolderParams
	15, // 30: mail_proto.MailService.EditFolder:input_type -> mail_proto.EditFolderParams
	3,  // 31: mail_proto.MailService.DeleteMessage:input_type -> mail_proto.UIDMessageIDFolderSlug
	16, // 32: mail_proto.MailService.SaveDraft:input_type -> mail_proto.SaveDraftParams
	18, // 33: mail_proto.MailService.EditDraft:input_type -> mail_proto.EditDraftParams
	17, // 34: mail_proto.MailService.MoveMessageToFolder:input_type -> mail_proto.MoveToFolderParams
	0,  // 35: mail_proto.MailService.GetCustomFolders:input_type -> mail_proto.UID
	26, // 36: mail_proto.MailService.GetAttach:input_type -> mail_proto.AttNUser
	11, // 37: mail_proto.MailService.GetFolders:output_type -> mail_proto.FoldersResponse
	10, // 38: mail_proto.MailService.GetFolderInfo:output_type -> mail_proto.Folder
	24, // 39: mail_proto.MailService.GetFolderMessages:output_type -> mail_proto.MessagesInfoResponse
	24, // 40: mail_proto.MailService.SearchMessages:output_type -> mail_proto.MessagesInfoResponse
	20, // 41: mail_proto.MailService.SearchRecipients:output_type -> mail_proto.SearchRecipientsResponse
	11, // 42: mail_proto.MailService.CreateDefaultFolders:output_type -> mail_proto.FoldersResponse
	22, // 43: mail_proto.MailService.GetMessage:output_type -> mail_proto.MessageInfo
	23, // 44: mail_proto.MailService.ValidateRecipients:output_type -> mail_proto.ValidateRecipientsResponse
	22, // 45: mail_proto.MailService.SendMessage:output_type -> mail_proto.MessageInfo
	27, // 46: mail_proto.MailService.SendFailedSendingMessage:output_type -> mail_proto.Nothing
	27, // 47: mail_proto.MailService.SendWelcomeMessage:output_type -> mail_proto.Nothing
	22, // 48: mail_proto.MailService.MarkMessageAsSeen:output_type -> mail_proto.MessageInfo
	22, // 49: mail_proto.MailService.MarkMessageAsUnseen:output_type -> mail_proto.MessageInfo
	10, // 50: mail_proto.MailService.CreateFolder:output_type -> mail_proto.Folder
	27, // 51: mail_proto.MailService.DeleteFolder:output_type -> mail_proto.Nothing
	10, // 52: mail_proto.MailService.EditFolder:output_type -> mail_proto.Folder
	27, // 53: mail_proto.MailService.DeleteMessage:output_type -> mail_proto.Nothing
	22, // 54: mail_proto.MailService.SaveDraft:output_type -> mail_proto.MessageInfo
	22, // 55: mail_proto.MailService.EditDraft:output_type -> mail_proto.MessageInfo
	27, // 56: mail_proto.MailService.MoveMessageToFolder:output_type -> mail_proto.Nothing
	11, // 57: mail_proto.MailService.GetCustomFolders:output_type -> mail_proto.FoldersResponse
	21, // 58: mail_proto.MailService.GetAttach:output_type -> mail_proto.AttachmentInfo
	37, // [37:59] is the sub-list for method output_type
	15, // [15:37] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_mail_proto_init() }
func file_mail_proto_init() {
	if File_mail_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mail_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIDMessageID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIDMessageIDFolderSlug); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipients); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FailedEmailsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipientEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Folder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFolderParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFolderParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditFolderParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveDraftParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveToFolderParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditDraftParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRecipientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateRecipientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMailParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttNUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nothing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mail_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mail_proto_goTypes,
		DependencyIndexes: file_mail_proto_depIdxs,
		MessageInfos:      file_mail_proto_msgTypes,
	}.Build()
	File_mail_proto = out.File
	file_mail_proto_rawDesc = nil
	file_mail_proto_goTypes = nil
	file_mail_proto_depIdxs = nil
}
