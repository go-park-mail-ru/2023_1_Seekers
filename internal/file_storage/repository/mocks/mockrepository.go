// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-park-mail-ru/2023_1_Seekers/internal/file_storage (interfaces: RepoI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/go-park-mail-ru/2023_1_Seekers/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockRepoI is a mock of RepoI interface.
type MockRepoI struct {
	ctrl     *gomock.Controller
	recorder *MockRepoIMockRecorder
}

// MockRepoIMockRecorder is the mock recorder for MockRepoI.
type MockRepoIMockRecorder struct {
	mock *MockRepoI
}

// NewMockRepoI creates a new mock instance.
func NewMockRepoI(ctrl *gomock.Controller) *MockRepoI {
	mock := &MockRepoI{ctrl: ctrl}
	mock.recorder = &MockRepoIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepoI) EXPECT() *MockRepoIMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockRepoI) Get(arg0, arg1 string) (*models.S3File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*models.S3File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRepoIMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRepoI)(nil).Get), arg0, arg1)
}

// Upload mocks base method.
func (m *MockRepoI) Upload(arg0 *models.S3File) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Upload", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Upload indicates an expected call of Upload.
func (mr *MockRepoIMockRecorder) Upload(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Upload", reflect.TypeOf((*MockRepoI)(nil).Upload), arg0)
}
