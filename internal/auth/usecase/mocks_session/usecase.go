// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-park-mail-ru/2023_1_Seekers/internal/auth (interfaces: SessionUseCaseI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/go-park-mail-ru/2023_1_Seekers/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockSessionUseCaseI is a mock of SessionUseCaseI interface.
type MockSessionUseCaseI struct {
	ctrl     *gomock.Controller
	recorder *MockSessionUseCaseIMockRecorder
}

// MockSessionUseCaseIMockRecorder is the mock recorder for MockSessionUseCaseI.
type MockSessionUseCaseIMockRecorder struct {
	mock *MockSessionUseCaseI
}

// NewMockSessionUseCaseI creates a new mock instance.
func NewMockSessionUseCaseI(ctrl *gomock.Controller) *MockSessionUseCaseI {
	mock := &MockSessionUseCaseI{ctrl: ctrl}
	mock.recorder = &MockSessionUseCaseIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionUseCaseI) EXPECT() *MockSessionUseCaseIMockRecorder {
	return m.recorder
}

// CreateSession mocks base method.
func (m *MockSessionUseCaseI) CreateSession(arg0 uint64) (*models.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSession", arg0)
	ret0, _ := ret[0].(*models.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSession indicates an expected call of CreateSession.
func (mr *MockSessionUseCaseIMockRecorder) CreateSession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSession", reflect.TypeOf((*MockSessionUseCaseI)(nil).CreateSession), arg0)
}

// DeleteSession mocks base method.
func (m *MockSessionUseCaseI) DeleteSession(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSession", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSession indicates an expected call of DeleteSession.
func (mr *MockSessionUseCaseIMockRecorder) DeleteSession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSession", reflect.TypeOf((*MockSessionUseCaseI)(nil).DeleteSession), arg0)
}

// GetSession mocks base method.
func (m *MockSessionUseCaseI) GetSession(arg0 string) (*models.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSession", arg0)
	ret0, _ := ret[0].(*models.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSession indicates an expected call of GetSession.
func (mr *MockSessionUseCaseIMockRecorder) GetSession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSession", reflect.TypeOf((*MockSessionUseCaseI)(nil).GetSession), arg0)
}
