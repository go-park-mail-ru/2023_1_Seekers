basePath: /api/v1
definitions:
  errors.JSONError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.AnonymousEmailResponse:
    properties:
      email:
        type: string
    type: object
  models.AnonymousEmailsResponse:
    properties:
      count:
        type: integer
      emails:
        items:
          type: string
        type: array
    type: object
  models.AttachmentInfo:
    properties:
      attachID:
        type: integer
      fileName:
        type: string
      sizeCount:
        type: integer
      sizeStr:
        type: string
      type:
        type: string
    type: object
  models.AuthResponse:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
    required:
    - email
    - firstName
    - lastName
    type: object
  models.EditUserInfoResponse:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.Folder:
    properties:
      folder_id:
        type: integer
      folder_slug:
        type: string
      messages_count:
        type: integer
      messages_unseen:
        type: integer
      name:
        type: string
    type: object
  models.FolderResponse:
    properties:
      folder:
        $ref: '#/definitions/models.Folder'
      messages:
        items:
          $ref: '#/definitions/models.MessageInfo'
        type: array
    type: object
  models.FoldersResponse:
    properties:
      count:
        type: integer
      folders:
        items:
          $ref: '#/definitions/models.Folder'
        type: array
    type: object
  models.FormLogin:
    properties:
      login:
        type: string
      password:
        type: string
      remember:
        type: boolean
    required:
    - login
    - password
    - remember
    type: object
  models.FormSignUp:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      login:
        type: string
      password:
        type: string
      repeatPw:
        type: string
    required:
    - firstName
    - lastName
    - login
    - password
    - repeatPw
    type: object
  models.MessageInfo:
    properties:
      attachments:
        items:
          $ref: '#/definitions/models.AttachmentInfo'
        type: array
      attachmentsSize:
        type: string
      created_at:
        type: string
      favorite:
        type: boolean
      from_user_id:
        $ref: '#/definitions/models.UserInfo'
      is_draft:
        type: boolean
      message_id:
        type: integer
      preview:
        type: string
      recipients:
        items:
          $ref: '#/definitions/models.UserInfo'
        type: array
      reply_to:
        $ref: '#/definitions/models.MessageInfo'
      seen:
        type: boolean
      text:
        type: string
      title:
        type: string
    type: object
  models.MessageResponse:
    properties:
      message:
        $ref: '#/definitions/models.MessageInfo'
    type: object
  models.MessagesResponse:
    properties:
      messages:
        items:
          $ref: '#/definitions/models.MessageInfo'
        type: array
    type: object
  models.UserInfo:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
    required:
    - email
    - firstName
    - lastName
    type: object
host: localhost:8001
info:
  contact: {}
  title: MailBx Swagger API
  version: "1.0"
paths:
  /anonymous:
    delete:
      consumes:
      - application/json
      description: delete anonymous email
      produces:
      - application/json
      responses:
        "200":
          description: success delete anonymous email
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: your anonymous email not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: DeleteAnonymousEmail
      tags:
      - anonymous
    get:
      consumes:
      - application/json
      description: get anonymous email by user
      produces:
      - application/json
      responses:
        "200":
          description: success get anon emails
          schema:
            $ref: '#/definitions/models.AnonymousEmailsResponse'
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: GetAnonymousEmails
      tags:
      - anonymous
  /anonymous/create:
    post:
      consumes:
      - application/json
      description: creating anonymous email
      produces:
      - application/json
      responses:
        "200":
          description: success create anon email
          schema:
            $ref: '#/definitions/models.AnonymousEmailResponse'
        "400":
          description: max count anonymous emails is 5
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: CreateAnonymousEmail
      tags:
      - anonymous
  /anonymous/messages:
    get:
      consumes:
      - application/json
      description: List of messages depends on anonymous email
      produces:
      - application/json
      responses:
        "200":
          description: success get list of messages depends on anonymous email
          schema:
            $ref: '#/definitions/models.MessagesResponse'
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: your anonymous email not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: GetAnonymousMessages
      tags:
      - anonymous
  /attach/{id}:
    get:
      consumes:
      - application/json
      description: get attach in base64
      produces:
      - application/json
      responses:
        "200":
          description: success download attach
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: attach not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: GetAttachB64
      tags:
      - messages
  /attach/{id}/preview:
    get:
      consumes:
      - application/json
      description: preview with attachID, returns html page
      produces:
      - application/json
      responses:
        "200":
          description: success preview
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: attach not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: PreviewAttach
      tags:
      - messages
  /auth:
    get:
      consumes:
      - application/json
      description: check is user authorised
      produces:
      - application/json
      responses:
        "200":
          description: success auth
        "401":
          description: failed auth
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: Auth
      tags:
      - auth
  /create_csrf:
    get:
      description: Get CSRF token
      responses:
        "200":
          description: success create csrf
        "401":
          description: failed get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: GetCSRF
      tags:
      - auth
  /external/attach/{id}:
    get:
      consumes:
      - application/json
      description: get attach with attachID, gets access key, then validate
      produces:
      - application/json
      responses:
        "200":
          description: success get attach
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: attach not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: GetAttach
      tags:
      - messages
  /folder/{slug}:
    delete:
      consumes:
      - application/json
      description: delete folder
      parameters:
      - description: FolderSlug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success delete folder
        "400":
          description: message not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: folder not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: DeleteFolder
      tags:
      - folders
    get:
      consumes:
      - application/json
      description: List of folder messages
      parameters:
      - description: FolderSlug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success get list of folder messages
          schema:
            $ref: '#/definitions/models.FolderResponse'
        "400":
          description: invalid url address
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: folder not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: GetFolderMessages
      tags:
      - folders
    put:
      consumes:
      - application/json
      description: edit folder name
      parameters:
      - description: FolderSlug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success edit folder
          schema:
            $ref: '#/definitions/models.FolderResponse'
        "400":
          description: invalid folder name
          schema:
            $ref: '#/definitions/errors.JSONError'
        "403":
          description: invalid form
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: folder not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: EditFolder
      tags:
      - folders
  /folder/create:
    post:
      consumes:
      - application/json
      description: creating folder
      produces:
      - application/json
      responses:
        "200":
          description: success create folder
          schema:
            $ref: '#/definitions/models.FolderResponse'
        "400":
          description: folder already exists
          schema:
            $ref: '#/definitions/errors.JSONError'
        "403":
          description: invalid form
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: folder not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: CreateFolder
      tags:
      - folders
  /folders:
    get:
      consumes:
      - application/json
      description: List of user folders
      produces:
      - application/json
      responses:
        "200":
          description: success get list of outgoing messages
          schema:
            $ref: '#/definitions/models.FoldersResponse'
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: GetFolders
      tags:
      - folders
  /logout:
    delete:
      consumes:
      - application/json
      description: check is user authorised
      produces:
      - application/json
      responses:
        "200":
          description: success logout
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: Logout
      tags:
      - auth
  /message/{id}:
    delete:
      consumes:
      - application/json
      description: delete message for user (moving to trash or full delete - depends
        of folder)
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success delete message
        "400":
          description: invalid url address
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: message not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: DeleteMessage
      tags:
      - messages
    get:
      consumes:
      - application/json
      description: Message
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success get messages
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: invalid url address
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: message not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: GetMessage
      tags:
      - messages
    put:
      consumes:
      - application/json
      description: edit draft message
      produces:
      - application/json
      responses:
        "200":
          description: success edit draft message
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: some emails are invalid
          schema:
            $ref: '#/definitions/errors.JSONError'
        "403":
          description: invalid form
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: message not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: EditDraft
      tags:
      - messages
  /message/{id}/attaches:
    get:
      consumes:
      - application/json
      description: download all attaches as zip, get messageID
      produces:
      - application/json
      responses:
        "200":
          description: success download attach
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: attach not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: DownloadAllAttaches
      tags:
      - messages
  /message/{id}/move:
    put:
      consumes:
      - application/json
      description: move message to folder
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success changed message's folder
        "400":
          description: can't move message from draft folder
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: folder not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: MoveToFolder
      tags:
      - messages
  /message/{id}/read:
    post:
      consumes:
      - application/json
      description: Message
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success read message
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: invalid url address
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: message not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: ReadMessage
      tags:
      - messages
  /message/{id}/unread:
    post:
      consumes:
      - application/json
      description: Message
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success unread message
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: invalid url address
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: message not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: UnreadMessage
      tags:
      - messages
  /message/attach/{id}:
    delete:
      consumes:
      - application/json
      description: delete draft attach with attachID
      produces:
      - application/json
      responses:
        "200":
          description: success get attach
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: attach not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: DeleteDraftAttach
      tags:
      - messages
  /message/save:
    post:
      consumes:
      - application/json
      description: save draft message
      produces:
      - application/json
      responses:
        "200":
          description: success save draft message
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: some emails are invalid
          schema:
            $ref: '#/definitions/errors.JSONError'
        "403":
          description: invalid form
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: message not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: SaveDraft
      tags:
      - messages
  /message/send:
    post:
      consumes:
      - application/json
      description: send message
      produces:
      - application/json
      responses:
        "200":
          description: success send message
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: no valid emails
          schema:
            $ref: '#/definitions/errors.JSONError'
        "403":
          description: invalid form
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: message not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: SendMessage
      tags:
      - messages
  /messages/search:
    get:
      consumes:
      - application/json
      description: list of filtered messages
      produces:
      - application/json
      responses:
        "200":
          description: success get filtered messages
          schema:
            $ref: '#/definitions/models.MessagesResponse'
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: SearchMessages
      tags:
      - folders
  /recipients/search:
    get:
      consumes:
      - application/json
      description: list recipients for user
      produces:
      - application/json
      responses:
        "200":
          description: success get recipients
          schema:
            items:
              $ref: '#/definitions/models.UserInfo'
            type: array
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: SearchRecipients
      tags:
      - recipients
  /signin:
    post:
      consumes:
      - application/json
      description: user sign in
      parameters:
      - description: user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.FormLogin'
      produces:
      - application/json
      responses:
        "200":
          description: success sign in
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "401":
          description: wrong password
          schema:
            $ref: '#/definitions/errors.JSONError'
        "403":
          description: invalid form
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: SignIn
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: user sign up
      parameters:
      - description: user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.FormSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: user created
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "401":
          description: invalid login
          schema:
            $ref: '#/definitions/errors.JSONError'
        "403":
          description: password too short
          schema:
            $ref: '#/definitions/errors.JSONError'
        "409":
          description: user already exists
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: SignUp
      tags:
      - auth
  /user:
    delete:
      consumes:
      - application/json
      description: delete user
      produces:
      - application/json
      responses:
        "200":
          description: success delete user
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: Delete
      tags:
      - users
  /user/avatar:
    get:
      consumes:
      - application/json
      description: get user avatar
      parameters:
      - description: email
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success get user avatar
          schema:
            items:
              type: integer
            type: array
        "400":
          description: no bucket
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: GetAvatar
      tags:
      - users
    put:
      consumes:
      - application/json
      description: edit user avatar
      produces:
      - application/json
      responses:
        "200":
          description: success edit user avatar
        "400":
          description: unsupported content type
          schema:
            $ref: '#/definitions/errors.JSONError'
        "403":
          description: invalid form
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: EditAvatar
      tags:
      - users
  /user/info:
    get:
      consumes:
      - application/json
      description: get info about request creator
      produces:
      - application/json
      responses:
        "200":
          description: success get user info
          schema:
            $ref: '#/definitions/models.UserInfo'
        "401":
          description: failed get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: GetPersonalInfo
      tags:
      - users
    put:
      consumes:
      - application/json
      description: edit info about user
      produces:
      - application/json
      responses:
        "200":
          description: success edit user info
          schema:
            $ref: '#/definitions/models.EditUserInfoResponse'
        "401":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "403":
          description: invalid form
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: EditInfo
      tags:
      - users
  /user/info/{email}:
    get:
      consumes:
      - application/json
      description: get info about user
      parameters:
      - description: email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success get user info
          schema:
            $ref: '#/definitions/models.UserInfo'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: GetInfo
      tags:
      - users
  /user/pw:
    put:
      consumes:
      - application/json
      description: edit password about user
      produces:
      - application/json
      responses:
        "200":
          description: success edit user password
        "400":
          description: failed to get user
          schema:
            $ref: '#/definitions/errors.JSONError'
        "403":
          description: invalid form
          schema:
            $ref: '#/definitions/errors.JSONError'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/errors.JSONError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/errors.JSONError'
      summary: EditPw
      tags:
      - users
swagger: "2.0"
