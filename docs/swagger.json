{
    "swagger": "2.0",
    "info": {
        "title": "MailBox Swagger API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8001",
    "basePath": "/api/v1",
    "paths": {
        "/folder/{slug}": {
            "get": {
                "description": "List of folder messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "GetFolderMessages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FolderSlug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get list of folder messages",
                        "schema": {
                            "$ref": "#/definitions/models.FolderResponse"
                        }
                    },
                    "400": {
                        "description": "failed to get folder messages",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "401": {
                        "description": "failed get session",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "404": {
                        "description": "invalid url address",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            }
        },
        "/folders/": {
            "get": {
                "description": "List of outgoing messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "GetFolders",
                "responses": {
                    "200": {
                        "description": "success get list of outgoing messages",
                        "schema": {
                            "$ref": "#/definitions/models.FoldersResponse"
                        }
                    },
                    "400": {
                        "description": "failed to get user",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "401": {
                        "description": "failed get session",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "user log out",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "success logout"
                    },
                    "401": {
                        "description": "failed get session",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            }
        },
        "/signin": {
            "post": {
                "description": "user sign in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "SignIn",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FormLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user created",
                        "schema": {
                            "$ref": "#/definitions/models.SignInResponse"
                        }
                    },
                    "401": {
                        "description": "wrong password",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "403": {
                        "description": "invalid form",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "500": {
                        "description": "failed to create session",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "user sign up",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "SignUp",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FormSignUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user created",
                        "schema": {
                            "$ref": "#/definitions/models.SignUpResponse"
                        }
                    },
                    "401": {
                        "description": "passwords dont match",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "403": {
                        "description": "password too short",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "409": {
                        "description": "user already exists",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "500": {
                        "description": "failed to create session",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.JSONError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Folder": {
            "type": "object",
            "properties": {
                "folder_id": {
                    "type": "integer"
                },
                "folder_slug": {
                    "type": "string"
                },
                "messages_count": {
                    "type": "integer"
                },
                "messages_unseen": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.FolderResponse": {
            "type": "object",
            "properties": {
                "folder": {
                    "$ref": "#/definitions/models.Folder"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MessageInfo"
                    }
                },
                "messages_count": {
                    "type": "integer"
                },
                "messages_unseen": {
                    "type": "integer"
                }
            }
        },
        "models.FoldersResponse": {
            "type": "object",
            "properties": {
                "folders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Folder"
                    }
                }
            }
        },
        "models.FormLogin": {
            "type": "object",
            "required": [
                "login",
                "password",
                "remember"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "remember": {
                    "type": "boolean"
                }
            }
        },
        "models.FormSignUp": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "login",
                "password",
                "repeat_pw"
            ],
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "repeat_pw": {
                    "description": "?",
                    "type": "string"
                }
            }
        },
        "models.MessageInfo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "favorite": {
                    "type": "boolean"
                },
                "from_user_id": {
                    "$ref": "#/definitions/models.UserInfo"
                },
                "message_id": {
                    "type": "integer"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserInfo"
                    }
                },
                "seen": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.SignInResponse": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "models.SignUpResponse": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "models.UserInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        }
    }
}