version: "3.8"

services:
  app:
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
    volumes:
      - $GOPATH/pkg/mod:/go/pkg/
      - ./logs/app:/app/logs/app
    build: ./
    network_mode: "host"
#    environment:
#      REDIS_HOST: ${REDIS_HOST}
#      REDIS_PORT: ${REDIS_PORT}
#      REDIS_PASSWORD: ${REDIS_PASSWORD}
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_HOST: ${POSTGRES_HOST}
#      POSTGRES_PORT: ${POSTGRES_PORT}
#      POSTGRES_DB: ${POSTGRES_DB}
#      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
#      S3_SECRET_KEY: ${S3_SECRET_KEY}
#      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
  db:
    env_file:
      - .env
    image: postgres:latest
    command: ["postgres",
              "-c", "log_directory=/var/log/postgresql",
#              "-c", "logging_collector=on",
              "-c", "log_statement=all"]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      my_network:
        ipv4_address: 172.28.0.3
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./scripts/sql:/docker-entrypoint-initdb.d
      - ./logs/postgres:/var/log/postgresql

  admin_db:
    env_file:
      - .env
    image: dpage/pgadmin4:latest
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
#      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE}
    networks:
      my_network:
        ipv4_address: 172.28.0.4
    ports:
      - "5050:80"
    depends_on:
      - db

  cache:
    env_file:
      - .env
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
#    environment:
#      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      my_network:
        ipv4_address: 172.28.0.5
    volumes:
      - cache:/data

volumes:
  db_data:
    driver: local
  cache:
    driver: local

networks:
  my_network:
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1
