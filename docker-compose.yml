version: "3.8"

services:
  app:
    depends_on:
      db:
        condition: service_healthy
      create-bucket:
        condition: service_started
      minio:
        condition: service_started
      cache:
        condition: service_started
    volumes:
      - $GOPATH/pkg/mod:/go/pkg/mod
    build: ./
    network_mode: "host"
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - pg-net
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 3
    restart: always
    volumes:
      # - TODO DATA
      - ./scripts/sql:/docker-entrypoint-initdb.d
      - ./logs/postgres:/logs

  admin_db:
    networks:
      - pg-net
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "True"
    ports:
      - "5050:80"
    depends_on:
      - db

  minio:
    image: minio/minio:RELEASE.2021-01-05T05-22-38Z
    networks:
      - minio-net
    volumes:
      - ./minio_data:/export
    command: server /export
    environment:
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
    ports:
      - "9000:9000"

  create-bucket:
    image: minio/mc:RELEASE.2021-01-05T05-03-58Z
    networks:
      - minio-net
    depends_on:
      - minio
    environment:
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
    entrypoint: >
      /bin/sh -c "
      sleep 3;
      /usr/bin/mc config host add minioClient http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      /usr/bin/mc mb minioClient/avatars; 
      sleep 3;
      exit 0;
      "

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - cache:/data

volumes:
  db:
    driver: local
  cache:
    driver: local

networks:
  minio-net:
    driver: bridge
    name: minio-net
    external: false
  pg-net:
    driver: bridge
    name: pg-net
    external: false